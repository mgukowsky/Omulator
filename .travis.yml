language: cpp
dist: xenial

sudo: required

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "E+qlpMQwKW3RN1+7LHQB7CTyGI2XCCDytG0JVXj158HC/iKrKx2E97HPuyGmyYQ9XZLte36vlBqNKUduDuiBDGMJZ8Hb0NeXNgWF3nY2yKnTYq29itHesaQkSbzBg7CigOXN5x6nnTrv6OfGrUPpcYipfwosTEryShJubP5/QTo="

matrix:
  include:
    # GCC7 Debug build
    - os: linux
      compiler: gcc
      env:
        - MATRIX_BUILD_TYPE=Debug
        - MATRIX_CC=gcc-7
        - MATRIX_CXX=g++-7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - [g++-7, libsdl2-dev, ninja-build]
    
    # GCC7 Release build
    - os: linux
      compiler: gcc
      env:
        - MATRIX_BUILD_TYPE=Release
        - MATRIX_CC=gcc-7
        - MATRIX_CXX=g++-7
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - [g++-7, libsdl2-dev, ninja-build]

    # GCC8 Debug build
    - os: linux
      compiler: gcc
      env:
        - MATRIX_BUILD_TYPE=Debug
        - MATRIX_CC=gcc-8
        - MATRIX_CXX=g++-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - [g++-8, libsdl2-dev, ninja-build]
    
    # GCC8 Release build
    - os: linux
      compiler: gcc
      env:
        - MATRIX_BUILD_TYPE=Release
        - MATRIX_CC=gcc-8
        - MATRIX_CXX=g++-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - [g++-8, libsdl2-dev, ninja-build]

    # Coverity build
    - os: linux
      compiler: gcc
      before_install: echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
      env:
        - MATRIX_BUILD_TYPE=Debug
        - MATRIX_CC=gcc-8
        - MATRIX_CXX=g++-8
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - [g++-8, libsdl2-dev, ninja-build]
        coverity_scan:
          project:
            name: "mgukowsky/Omulator"
            description: "The Omnibus Emulator"
          notification_email: ""
          build_command_prepend: "mkdir coverity_build; cd coverity_build; cmake .. -DCMAKE_BUILD_TYPE=$MATRIX_BUILD_TYPE -GNinja"
          build_command: "ninja -v; cd .."
          branch_pattern: coverity_scan

    # Clang-7 Debug build
    # - os: linux
    #   compiler: clang
    #   env:
    #     - MATRIX_BUILD_TYPE=Debug
    #     - MATRIX_CC=clang-7
    #     - MATRIX_CXX=clang++-7
    #   addons:
    #     apt:
    #       sources:
    #         - llvm-toolchain-xenial-7
    #       packages:
    #         - [clang-7, libsdl2-dev, ninja-build]
    
    # Clang-7 RelWithDebInfo (i.e. clang sanitizers) build
    # - os: linux
    #   compiler: clang
    #   env:
    #     - MATRIX_BUILD_TYPE=RelWithDebInfo
    #     - MATRIX_CC=clang-7
    #     - MATRIX_CXX=clang++-7
    #   addons:
    #     apt:
    #       sources:
    #         - llvm-toolchain-xenial-7
    #       packages:
    #         - [clang-7, libsdl2-dev, ninja-build]
 
    # # Clang Release build
    # - os: linux
    #   compiler: clang
    #   env:
    #     - MATRIX_BUILD_TYPE=Release
    #     - MATRIX_CC=clang-7
    #     - MATRIX_CXX=clang++-7
    #   addons:
    #     apt:
    #       sources:
    #         - llvm-toolchain-xenial-7
    #       packages:
    #         - [clang-7, libsdl2-dev, ninja-build]
 
before_script:
  - export CC=$MATRIX_CC
  - export CXX=$MATRIX_CXX

script:
  - uname -a
  - $CC --version
  - $CXX --version
  - cmake --version

  - mkdir -p build && cd build
  - "cmake .. -DCMAKE_BUILD_TYPE=$MATRIX_BUILD_TYPE -GNinja && ninja -v && ctest -V -j"

notifications:
  email: false
